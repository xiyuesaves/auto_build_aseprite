name: build-aseprite-latest
on:
  workflow_dispatch:
jobs:
  start-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        shell: bash
        run: |
          # 通过api获取当前最新版本号
          SKIAVERSION="$(curl https://api.github.com/repos/aseprite/skia/releases/latest | jq -r .tag_name)"
          VERSION="$(curl https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r .tag_name)"
          # 创建文件夹
          mkdir -p code temp dist
          # 下载最新源码并解压
          curl -LO "https://github.com/aseprite/aseprite/releases/download/$VERSION/Aseprite-$VERSION-Source.zip"
          unzip -qo Aseprite-$VERSION-Source.zip -d code
          # 下载魔改后的skia并解压
          curl -LO "https://github.com/aseprite/skia/releases/download/$SKIAVERSION/Skia-Windows-Release-x64.zip"
          unzip -qo Skia-Windows-Release-x64.zip -d dist
          # 进入临时目录
          cd temp
          # 删除系统自带的的MinGW
          # Aseprite不支持在Windows上用g++编译，PATH中的MinGW会干扰CMake判断。因为找不到对应的Chocolatey包来卸，故以暴力手段处理，反正主机是一次性的。
          for i in c++ cpp gcc g++ cc ar as ld nm ranlib windres gfortran make mingw32-make ccache
          do
            while rm -v $(which $i)
            do
              :
            done
          done
          # 生成bat脚本
          cat <<'EOF' > b.bat
            for /f "usebackq delims=" %%i in (`vswhere.exe -latest -property installationPath`) do call "%%i\VC\Auxiliary\Build\vcvars32.bat"
            cmake -DSKIA_DIR=..\dist -DSKIA_LIBRARY_DIR=..\dist\out\Release-x64 -DSKIA_LIBRARY=..\dist\out\Release-x64\skia.lib ^
              -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLAF_BACKEND=skia -G Ninja ..\code
            ninja aseprite
          EOF
          # 执行脚本
          cmd.exe /dist b.bat
          # 将编译结果打包为zip
          7z dist build.7z bin
          # 使用git提交
          git add build.7z
          git -c user.email=github@action -c user.name=action commit -m build
          git push
