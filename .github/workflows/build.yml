name: a
on:
  workflow_dispatch:
jobs:
  a:
    runs-on: windows-latest
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: a
        shell: bash
        run: |
          SKIAVERSION="$(curl https://api.github.com/repos/aseprite/skia/releases/latest | jq -r .tag_name)"
          VERSION="$(curl https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r .tag_name)"
          mkdir -p a b c
          curl -LO "https://github.com/aseprite/aseprite/releases/download/$VERSION/Aseprite-$VERSION-Source.zip"
          unzip -qo Aseprite-$VERSION-Source.zip -d a
          curl -LO "https://github.com/aseprite/skia/releases/download/$SKIAVERSION/Skia-Windows-Release-x86.zip"
          unzip -qo Skia-Windows-Release-x86.zip -d c
          cd b
          git add .
          git -c user.email=@ -c user.name=a commit -m a
          git push

          # Aseprite不支持在Windows上用g++编译，PATH中的MinGW会干扰CMake判断。因为找不到对应的Chocolatey包来卸，故以暴力手段处理，反正主机是一次性的。
          # for i in c++ cpp gcc g++ cc ar as ld nm ranlib windres gfortran make mingw32-make ccache
          # do
          #   while rm -v $(which $i)
          #   do
          #     :
          #   done
          # done
          # cat <<'EOF' > b.bat
          #   for /f "usebackq delims=" %%i in (`vswhere.exe -latest -property installationPath`) do call "%%i\VC\Auxiliary\Build\vcvars32.bat"
          #   cmake -DSKIA_DIR=..\c -DSKIA_LIBRARY_DIR=..\c\out\Release-x86 -DSKIA_LIBRARY=..\c\out\Release-x86\skia.lib ^
          #     -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLAF_BACKEND=skia -G Ninja ..\a
          #   ninja aseprite
          # EOF
          # cmd.exe /c b.bat
          # 7z a a.7z bin
          # git add a.7z
          # git -c user.email=@ -c user.name=a commit -m a
          # git push
